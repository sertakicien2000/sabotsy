{"ast":null,"code":"/* Copyright 2015-2016 PayPal, Inc. */\n\"use strict\";\n\nvar generate = require('../generate');\n\nvar api = require('../api');\n/**\n * Take action on a payment with the intent of order\n * @return {Object} order functions\n */\n\n\nfunction order() {\n  var baseURL = '/v1/payments/orders/';\n  var operations = ['get', 'capture'];\n  var ret = {\n    baseURL: baseURL,\n\n    /**\n     * Void an existing order\n     * @param  {String}   id     Order identifier\n     * @param  {Object|Function}   config     Configuration parameters e.g. client_id, client_secret override or callback\n     * @param  {Function} cb        \n     * @return {Object}          Order object, with state set to voided\n     */\n    void: function voidOrder(id, config, cb) {\n      api.executeHttp('POST', this.baseURL + id + '/do-void', {}, config, cb);\n    },\n\n    /**\n     * Authorize an order\n     * @param  {String}   id     Order identifier\n     * @param  {Object}   data   Amount object with total and currency\n     * @param  {Object|Function}   config     Configuration parameters e.g. client_id, client_secret override or callback\n     * @param  {Function} cb \n     * @return {Object}          Authorization object\n     */\n    authorize: function authorize(id, data, config, cb) {\n      api.executeHttp('POST', this.baseURL + id + '/authorize', data, config, cb);\n    }\n  };\n  ret = generate.mixin(ret, operations);\n  return ret;\n}\n\nmodule.exports = order;","map":null,"metadata":{},"sourceType":"script"}