{"ast":null,"code":"/* Copyright 2015-2016 PayPal, Inc. */\n\"use strict\";\n\nvar generate = require('../generate');\n\nvar api = require('../api');\n/**\n * Exposes REST endpoints for providing a customizing Paypal checkout\n * flow for users, supports features such as noshipping.\n *\n * https://developer.paypal.com/webapps/developer/docs/integration/direct/rest-experience-overview/\n * @return {Object} web profile functions\n */\n\n\nfunction webProfile() {\n  var baseURL = '/v1/payment-experience/web-profiles/';\n  var operations = ['create', 'list', 'get', 'del', 'delete'];\n  var ret = {\n    baseURL: baseURL,\n\n    /**\n     * Update an experience profile\n     * @param  {String}   id     Web Profile Id\n     * @param  {Object}   data   Object with name, flow_config, input_fields and presentation\n     * @param  {Object|Function}   config     Configuration parameters e.g. client_id, client_secret override or callback\n     * @param  {Function} cb     \n     * @return {}          Returns the HTTP status of 204 if the call is successful\n     */\n    update: function update(id, data, config, cb) {\n      api.executeHttp('PUT', this.baseURL + id, data, config, cb);\n    },\n\n    /**\n     * Partially update a web experience profile\n     * @param  {String}   id     Web Profile Id\n     * @param  {Array}   data   Array of patch request objects (operation, path, value, from)\n     * @param  {Object|Function}   config     Configuration parameters e.g. client_id, client_secret override or callback\n     * @param  {Function} cb \n     * @return {}          Returns the HTTP status of 204 if the call is successful\n     */\n    replace: function replace(id, data, config, cb) {\n      api.executeHttp('PATCH', this.baseURL + id, data, config, cb);\n    }\n  };\n  ret = generate.mixin(ret, operations);\n  return ret;\n}\n\nmodule.exports = webProfile;","map":null,"metadata":{},"sourceType":"script"}