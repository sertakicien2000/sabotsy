{"ast":null,"code":"import _defineProperty from \"/home/dev/Bureau/CuisineAtelier/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dev/Bureau/CuisineAtelier/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev/Bureau/CuisineAtelier/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev/Bureau/CuisineAtelier/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev/Bureau/CuisineAtelier/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev/Bureau/CuisineAtelier/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev/Bureau/CuisineAtelier/front/src/Component/inscription.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nvar inscription =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(inscription, _Component);\n\n  function inscription() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, inscription);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(inscription)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      nom: \"\",\n      prenom: \"\",\n      email: \"\",\n      tel: \"\"\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n      event.target.className += \" was-validated\";\n\n      _this.inscription({\n        nom: _this.state.nom,\n        prenom: _this.state.prenom,\n        email: _this.state.email,\n        tel: _this.state.tel,\n        idAtelier: _this.props.idAtelier\n      });\n    };\n\n    _this.changeHandler = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(inscription, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.idAtelier);\n    }\n  }, {\n    key: \"inscription\",\n    value: function inscription(r) {\n      var _this2 = this;\n\n      console.log(r);\n      axios.post(\"http://localhost:8080/inscription\", r).then(function (res) {\n        if (res.data !== \"email deja utilisé\") {\n          axios.put(\"http://localhost:8080/updPlaceRes\", {\n            id: _this2.props.idAtelier\n          }).then(function (res2) {\n            console.log(\"res2\", res2);\n            console.log(\"res1\", res);\n            document.getElementById(\"reussi\").innerHTML = \"Inscription reussi\";\n            document.getElementById(\"erreur\").innerHTML = \"\";\n          }).catch(function (err) {\n            console.log(\"err\", err);\n          });\n        } else {\n          document.getElementById(\"erreur\").innerHTML = \"Email deja utilisé\";\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var container = {\n        height: 1300\n      };\n      return React.createElement(MDBContainer, {\n        style: container,\n        className: \"text-center mt-5 pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"needs-validation\",\n        noValidate: true,\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"4\",\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"defaultFormRegisterNameEx\",\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Nom\"), React.createElement(\"input\", {\n        value: this.state.fname,\n        name: \"nom\",\n        onChange: this.changeHandler,\n        type: \"text\",\n        id: \"defaultFormRegisterNameEx\",\n        className: \"form-control\",\n        placeholder: \"First name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Looks good!\")), React.createElement(MDBCol, {\n        md: \"4\",\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"defaultFormRegisterEmailEx2\",\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Prenom\"), React.createElement(\"input\", {\n        value: this.state.lname,\n        name: \"prenom\",\n        onChange: this.changeHandler,\n        type: \"text\",\n        id: \"defaultFormRegisterEmailEx2\",\n        className: \"form-control\",\n        placeholder: \"Last name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Looks good!\")), React.createElement(MDBCol, {\n        md: \"4\",\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"defaultFormRegisterConfirmEx3\",\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        value: this.state.email,\n        onChange: this.changeHandler,\n        type: \"email\",\n        id: \"defaultFormRegisterConfirmEx3\",\n        className: \"form-control\",\n        name: \"email\",\n        placeholder: \"Your Email address\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        id: \"emailHelp\",\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"We'll never share your email with anyone else.\"))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"4\",\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"defaultFormRegisterPasswordEx4\",\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Telephone\"), React.createElement(\"input\", {\n        value: this.state.city,\n        onChange: this.changeHandler,\n        type: \"text\",\n        id: \"defaultFormRegisterPasswordEx4\",\n        className: \"form-control\",\n        name: \"tel\",\n        placeholder: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Please provide a valid city.\"), React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Looks good!\"))), React.createElement(MDBBtn, {\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"S' inscrire\")), React.createElement(\"div\", {\n        id: \"erreur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"reussi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return inscription;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    idAtelier: state.idAtelier\n  };\n};\n\nexport default connect(mapStateToProps)(inscription);","map":{"version":3,"sources":["/home/dev/Bureau/CuisineAtelier/front/src/Component/inscription.js"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBBtn","axios","connect","inscription","state","nom","prenom","email","tel","submitHandler","event","preventDefault","target","className","idAtelier","props","changeHandler","setState","name","value","console","log","r","post","then","res","data","put","id","res2","document","getElementById","innerHTML","catch","err","container","height","fname","lname","city","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nclass inscription extends Component {\n    state = {\n        nom: \"\",\n        prenom: \"\",\n        email: \"\",\n        tel: \"\",\n\n    };\n    componentDidMount() {\n        console.log(this.props.idAtelier);\n\n    }\n\n    submitHandler = event => {\n        event.preventDefault();\n        event.target.className += \" was-validated\";\n        this.inscription({\n            nom: this.state.nom,\n            prenom: this.state.prenom,\n            email: this.state.email,\n            tel: this.state.tel,\n            idAtelier: this.props.idAtelier\n        })\n    };\n\n    changeHandler = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    inscription(r) {\n        console.log(r);\n        axios.post(\"http://localhost:8080/inscription\", r)\n            .then(res => {\n                if (res.data !== \"email deja utilisé\") {\n                    axios.put(\"http://localhost:8080/updPlaceRes\", { id: this.props.idAtelier })\n                        .then(res2 => {\n                            console.log(\"res2\", res2);\n                            console.log(\"res1\", res);\n                            document.getElementById(\"reussi\").innerHTML=\"Inscription reussi\"\n                            document.getElementById(\"erreur\").innerHTML=\"\"\n                        }).catch(err => {\n                            console.log(\"err\", err);\n\n                        })\n                }else{\n                    document.getElementById(\"erreur\").innerHTML=\"Email deja utilisé\"\n                    \n                }\n\n\n\n            }).catch(err => {\n                console.log(err);\n\n            })\n    }\n\n    render() {\n        const container = { height: 1300 }\n        return (\n            <MDBContainer style={container} className=\"text-center mt-5 pt-5\">\n                <form\n                    className=\"needs-validation\"\n                    noValidate\n                    onSubmit={this.submitHandler}\n\n                >\n                    <MDBRow>\n                        <MDBCol md=\"4\" className=\"mb-3\">\n                            <label\n                                htmlFor=\"defaultFormRegisterNameEx\"\n                                className=\"grey-text\"\n                            >\n                                Nom\n                            </label>\n                            <input\n                                value={this.state.fname}\n                                name=\"nom\"\n                                onChange={this.changeHandler}\n                                type=\"text\"\n                                id=\"defaultFormRegisterNameEx\"\n                                className=\"form-control\"\n                                placeholder=\"First name\"\n                                required\n                            />\n                            <div className=\"valid-feedback\">Looks good!</div>\n                        </MDBCol>\n                        <MDBCol md=\"4\" className=\"mb-3\">\n                            <label\n                                htmlFor=\"defaultFormRegisterEmailEx2\"\n                                className=\"grey-text\"\n                            >\n                                Prenom\n                             </label>\n                            <input\n                                value={this.state.lname}\n                                name=\"prenom\"\n                                onChange={this.changeHandler}\n                                type=\"text\"\n                                id=\"defaultFormRegisterEmailEx2\"\n                                className=\"form-control\"\n                                placeholder=\"Last name\"\n                                required\n                            />\n                            <div className=\"valid-feedback\">Looks good!</div>\n                        </MDBCol>\n                        <MDBCol md=\"4\" className=\"mb-3\">\n                            <label\n                                htmlFor=\"defaultFormRegisterConfirmEx3\"\n                                className=\"grey-text\"\n                            >\n                                Email\n                             </label>\n                            <input\n                                value={this.state.email}\n                                onChange={this.changeHandler}\n                                type=\"email\"\n                                id=\"defaultFormRegisterConfirmEx3\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                placeholder=\"Your Email address\"\n                                required\n                            />\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">\n                                We'll never share your email with anyone else.\n                            </small>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"4\" className=\"mb-3\">\n                            <label\n                                htmlFor=\"defaultFormRegisterPasswordEx4\"\n                                className=\"grey-text\"\n                            >\n                                Telephone\n                            </label>\n                            <input\n                                value={this.state.city}\n                                onChange={this.changeHandler}\n                                type=\"text\"\n                                id=\"defaultFormRegisterPasswordEx4\"\n                                className=\"form-control\"\n                                name=\"tel\"\n                                placeholder=\"City\"\n\n                            />\n                            <div className=\"invalid-feedback\">\n                                Please provide a valid city.\n                            </div>\n                            <div className=\"valid-feedback\">Looks good!</div>\n                        </MDBCol>\n\n                    </MDBRow>\n                    {/* <MDBCol md=\"4\" className=\"mb-3\">\n                        <div className=\"custom-control custom-checkbox pl-3\">\n                            <input\n                                className=\"custom-control-input\"\n                                type=\"checkbox\"\n                                value=\"\"\n                                id=\"invalidCheck\"\n                                required\n                            />\n                            <label className=\"custom-control-label\" htmlFor=\"invalidCheck\">\n                                Agree to terms and conditions\n                            </label>\n                            <div className=\"invalid-feedback\">\n                                You must agree before submitting.\n                            </div>\n                        </div>\n                    </MDBCol> */}\n                    <MDBBtn color=\"primary\" type=\"submit\" >\n                        S' inscrire\n              </MDBBtn>\n\n                </form>\n                <div id=\"erreur\"></div>\n                <div id=\"reussi\"></div>\n            </MDBContainer>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        idAtelier: state.idAtelier\n    }\n}\nexport default connect(mapStateToProps)(inscription)\n"]},"metadata":{},"sourceType":"module"}