{"ast":null,"code":"/* Copyright 2015-2016 PayPal, Inc. */\n\"use strict\";\n\nvar api = require('./api');\n/**\n * Attach REST operations from restFunctions as required by a PayPal API\n * resource e.g. create, get and list are attahed for Payment resource\n * @param  {Object} destObject A PayPal resource e.g. Invoice\n * @param  {Array} operations Rest operations that the destObject will allow e.g. get\n * @return {Object}            \n */\n\n\nfunction mixin(destObject, operations) {\n  operations.forEach(function (property) {\n    destObject[property] = restFunctions[property];\n  });\n  return destObject;\n}\n/**\n * restFunctions Object containing the REST CRUD methods and paypal specific REST methods that\n * are shared between at least two of the REST endpoints, otherwise the function\n * will be defined within the resource definition itself\n * @type {Object}\n */\n\n\nvar restFunctions = {\n  create: function create(data, config, cb) {\n    api.executeHttp('POST', this.baseURL, data, config, cb);\n  },\n  get: function get(id, config, cb) {\n    api.executeHttp('GET', this.baseURL + id, {}, config, cb);\n  },\n  list: function list(data, config, cb) {\n    if (typeof data === 'function') {\n      config = data;\n      data = {};\n    }\n\n    api.executeHttp('GET', this.baseURL, data, config, cb);\n  },\n  del: function del(id, config, cb) {\n    api.executeHttp('DELETE', this.baseURL + id, {}, config, cb);\n  },\n  //provided for compatibility with 0.* versions\n  delete: function del(id, config, cb) {\n    api.executeHttp('DELETE', this.baseURL + id, {}, config, cb);\n  },\n  capture: function capture(id, data, config, cb) {\n    api.executeHttp('POST', this.baseURL + id + '/capture', data, config, cb);\n  },\n  refund: function refund(id, data, config, cb) {\n    api.executeHttp('POST', this.baseURL + id + '/refund', data, config, cb);\n  },\n  update: function update(id, data, config, cb) {\n    api.executeHttp('PATCH', this.baseURL + id, data, config, cb);\n  },\n  cancel: function cancel(id, data, config, cb) {\n    api.executeHttp('POST', this.baseURL + id + '/cancel', data, config, cb);\n  }\n};\nmodule.exports.mixin = mixin;","map":null,"metadata":{},"sourceType":"script"}