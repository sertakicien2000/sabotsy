{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/dev/Bureau/ecommerce/front/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PayPalButton = void 0;\n\nrequire(\"@babel/polyfill\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _paypalCheckout = _interopRequireDefault(require(\"paypal-checkout\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar Button = _paypalCheckout[\"default\"].Button.driver('react', {\n  React: _react[\"default\"],\n  ReactDOM: _reactDom[\"default\"]\n});\n/**\r\n * types\r\n */\n\n/**\r\n * component\r\n */\n\n\nvar PayPalButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PayPalButton, _React$Component);\n\n  function PayPalButton(props) {\n    var _this;\n\n    _classCallCheck(this, PayPalButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PayPalButton).call(this, props));\n    _this.state = {\n      loaded: false,\n      error: false\n    };\n    _this.onAuthorize = _this.onAuthorize.bind(_assertThisInitialized(_this));\n    _this.payment = _this.payment.bind(_assertThisInitialized(_this));\n    _this.onShippingChange = _this.onShippingChange.bind(_assertThisInitialized(_this));\n    _this.onCancel = _this.onCancel.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PayPalButton, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var paypalLoaded;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                paypalLoaded = !!window.__pptmLoadedWithNoContent;\n\n                if (paypalLoaded) {\n                  this.setState({\n                    loaded: true\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidCatch\",\n    value: function componentDidCatch() {\n      this.setState({\n        error: true\n      });\n    }\n  }, {\n    key: \"payment\",\n    value: function payment(data, actions) {\n      var _this2 = this;\n\n      if (this.props.onPaymentStart) {\n        this.props.onPaymentStart();\n      }\n\n      return actions.payment.create({\n        transactions: [{\n          amount: {\n            total: this.props.amount,\n            currency: this.props.currency\n          }\n        }]\n      })[\"catch\"](function (e) {\n        console.error({\n          message: 'Error Loading React Paypal Button, check your environment variables'\n        });\n\n        _this2.setState({\n          error: true\n        });\n      });\n    }\n  }, {\n    key: \"onAuthorize\",\n    value: function onAuthorize(data, actions) {\n      var _this3 = this;\n\n      return actions.payment.execute().then(function (res) {\n        if (_this3.props.onPaymentSuccess) {\n          _this3.props.onPaymentSuccess(res);\n        }\n      })[\"catch\"](function (e) {\n        if (_this3.props.onPaymentError) {\n          _this3.props.onPaymentError(e.message);\n        } else {\n          console.warn({\n            paypalOnAuthError: e.message\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onShippingChange\",\n    value: function onShippingChange(data, actions) {\n      var _this4 = this;\n\n      if (this.props.onShippingChange) {\n        Promise.resolve(this.props.onShippingChange(data)).then(function (rate) {\n          // early exit if user doesn't return a value\n          if (!rate) {\n            return actions.resolve();\n          }\n\n          var baseOrderAmount = \"\".concat(_this4.props.amount);\n          var shippingAmount = \"\".concat(rate);\n          var value = (parseFloat(baseOrderAmount) + parseFloat(shippingAmount)).toFixed(2);\n          var currency_code = _this4.props.currency;\n          return actions.order.patch([{\n            op: 'replace',\n            path: '/purchase_units/@reference_id==\\'default\\'/amount',\n            value: {\n              currency_code: currency_code,\n              value: value,\n              breakdown: {\n                item_total: {\n                  currency_code: currency_code,\n                  value: baseOrderAmount\n                },\n                shipping: {\n                  currency_code: currency_code,\n                  value: shippingAmount\n                }\n              }\n            }\n          }]);\n        });\n      } else {\n        return actions.resolve();\n      }\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel(data) {\n      if (this.props.onPaymentCancel) {\n        this.props.onPaymentCancel(data);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          loaded = _this$state.loaded;\n      var _this$props = this.props,\n          env = _this$props.env,\n          sandboxID = _this$props.sandboxID,\n          productionID = _this$props.productionID,\n          amount = _this$props.amount;\n\n      if (error) {\n        return null;\n      }\n\n      return loaded && !error && _react[\"default\"].createElement(Button, {\n        commit: true,\n        env: env,\n        amount: amount,\n        client: {\n          sandbox: sandboxID,\n          production: productionID\n        },\n        payment: this.payment,\n        onAuthorize: this.onAuthorize,\n        onShippingChange: this.onShippingChange,\n        onCancel: this.onCancel\n      });\n    }\n  }]);\n\n  return PayPalButton;\n}(_react[\"default\"].Component);\n\nexports.PayPalButton = PayPalButton;","map":null,"metadata":{},"sourceType":"script"}