{"ast":null,"code":"/* Copyright 2015-2016 PayPal, Inc. */\n\"use strict\";\n\nvar generate = require('../generate');\n\nvar api = require('../api');\n/**\n * Retrieving, capturing, voiding, and reauthorizing previously created authorizations\n * @return {Object} authorization functions\n */\n\n\nfunction authorization() {\n  var baseURL = '/v1/payments/authorization/';\n  var operations = ['get', 'capture'];\n  var ret = {\n    baseURL: baseURL,\n\n    /**\n     * Void a previously authorized payment\n     * @param  {String}   id     authorization identifier\n     * @param  {Object|Function}   config     Configuration parameters e.g. client_id, client_secret override or callback\n     * @param  {Function} cb        \n     * @return {Object}          Authorization object\n     */\n    void: function voidAuthorization(id, config, cb) {\n      api.executeHttp('POST', this.baseURL + id + '/void', {}, config, cb);\n    },\n\n    /**\n     * Reauthorize a PayPal account payment\n     * @param  {String}   id     authorization identifier\n     * @param  {object}   data   amount object with total e.g. 7.00 and currency e.g. USD\n     * @param  {Object|Function}   config     Configuration parameters e.g. client_id, client_secret override or callback\n     * @param  {Function} cb     \n     * @return {}          \n     */\n    reauthorize: function reauthorize(id, data, config, cb) {\n      api.executeHttp('POST', this.baseURL + id + '/reauthorize', data, config, cb);\n    }\n  };\n  ret = generate.mixin(ret, operations);\n  return ret;\n}\n\nmodule.exports = authorization;","map":null,"metadata":{},"sourceType":"script"}