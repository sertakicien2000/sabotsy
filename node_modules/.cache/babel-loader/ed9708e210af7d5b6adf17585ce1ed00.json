{"ast":null,"code":"/* Copyright 2015-2016 PayPal, Inc. */\n\"use strict\";\n\nvar generate = require('../generate');\n\nvar api = require('../api');\n/**\n * Create, send and manage invoices, PayPal emails the customer with link to invoice\n * on PayPal's website. Customers can pay with PayPal, check, debit or credit card.\n * @return {Invoice} Invoice functions\n */\n\n\nfunction invoice() {\n  var baseURL = '/v1/invoicing/invoices/';\n  var operations = ['create', 'get', 'list', 'del', 'delete', 'cancel'];\n  var ret = {\n    baseURL: baseURL,\n    search: function search(data, config, cb) {\n      api.executeHttp('POST', '/v1/invoicing/search', data, config, cb);\n    },\n    update: function update(id, data, config, cb) {\n      api.executeHttp('PUT', this.baseURL + id, data, config, cb);\n    },\n    send: function send(id, config, cb) {\n      api.executeHttp('POST', this.baseURL + id + '/send', {}, config, cb);\n    },\n    remind: function remind(id, data, config, cb) {\n      api.executeHttp('POST', this.baseURL + id + '/remind', data, config, cb);\n    },\n    recordPayment: function recordPayment(id, data, config, cb) {\n      api.executeHttp('POST', this.baseURL + id + '/record-payment', data, config, cb);\n    },\n    recordRefund: function recordRefund(id, data, config, cb) {\n      api.executeHttp('POST', this.baseURL + id + '/record-refund', data, config, cb);\n    },\n    deleteExternalPayment: function deleteExternalPayment(invoiceId, transactionId, config, cb) {\n      api.executeHttp('DELETE', this.baseURL + invoiceId + '/payment-records/' + transactionId, {}, config, cb);\n    },\n    deleteExternalRefund: function deleteExternalRefund(invoiceId, transactionId, config, cb) {\n      api.executeHttp('DELETE', this.baseURL + invoiceId + '/refund-records/' + transactionId, {}, config, cb);\n    },\n    generateNumber: function generateNumber(config, cb) {\n      api.executeHttp(\"POST\", this.baseURL + '/next-invoice-number', {}, config, cb);\n    },\n\n    /* Specify invoice ID to get a QR code corresponding to the invoice */\n    qrCode: function qrCode(id, height, width, config, cb) {\n      var image_attributes = {\n        \"height\": height,\n        \"width\": width\n      };\n      api.executeHttp('GET', this.baseURL + id + '/qr-code', image_attributes, config, cb);\n    }\n  };\n  ret = generate.mixin(ret, operations);\n  return ret;\n}\n\nmodule.exports = invoice;","map":null,"metadata":{},"sourceType":"script"}