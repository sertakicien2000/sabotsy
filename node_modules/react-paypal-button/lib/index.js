"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PayPalButton = void 0;

require("@babel/polyfill");

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _paypalCheckout = _interopRequireDefault(require("paypal-checkout"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Button = _paypalCheckout["default"].Button.driver('react', {
  React: _react["default"],
  ReactDOM: _reactDom["default"]
});
/**
 * types
 */


/**
 * component
 */
var PayPalButton =
/*#__PURE__*/
function (_React$Component) {
  _inherits(PayPalButton, _React$Component);

  function PayPalButton(props) {
    var _this;

    _classCallCheck(this, PayPalButton);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(PayPalButton).call(this, props));
    _this.state = {
      loaded: false,
      error: false
    };
    _this.onAuthorize = _this.onAuthorize.bind(_assertThisInitialized(_this));
    _this.payment = _this.payment.bind(_assertThisInitialized(_this));
    _this.onShippingChange = _this.onShippingChange.bind(_assertThisInitialized(_this));
    _this.onCancel = _this.onCancel.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(PayPalButton, [{
    key: "componentDidMount",
    value: function () {
      var _componentDidMount = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        var paypalLoaded;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                paypalLoaded = !!window.__pptmLoadedWithNoContent;

                if (paypalLoaded) {
                  this.setState({
                    loaded: true
                  });
                }

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function componentDidMount() {
        return _componentDidMount.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: "componentDidCatch",
    value: function componentDidCatch() {
      this.setState({
        error: true
      });
    }
  }, {
    key: "payment",
    value: function payment(data, actions) {
      var _this2 = this;

      if (this.props.onPaymentStart) {
        this.props.onPaymentStart();
      }

      return actions.payment.create({
        transactions: [{
          amount: {
            total: this.props.amount,
            currency: this.props.currency
          }
        }]
      })["catch"](function (e) {
        console.error({
          message: 'Error Loading React Paypal Button, check your environment variables'
        });

        _this2.setState({
          error: true
        });
      });
    }
  }, {
    key: "onAuthorize",
    value: function onAuthorize(data, actions) {
      var _this3 = this;

      return actions.payment.execute().then(function (res) {
        if (_this3.props.onPaymentSuccess) {
          _this3.props.onPaymentSuccess(res);
        }
      })["catch"](function (e) {
        if (_this3.props.onPaymentError) {
          _this3.props.onPaymentError(e.message);
        } else {
          console.warn({
            paypalOnAuthError: e.message
          });
        }
      });
    }
  }, {
    key: "onShippingChange",
    value: function onShippingChange(data, actions) {
      var _this4 = this;

      if (this.props.onShippingChange) {
        Promise.resolve(this.props.onShippingChange(data)).then(function (rate) {
          // early exit if user doesn't return a value
          if (!rate) {
            return actions.resolve();
          }

          var baseOrderAmount = "".concat(_this4.props.amount);
          var shippingAmount = "".concat(rate);
          var value = (parseFloat(baseOrderAmount) + parseFloat(shippingAmount)).toFixed(2);
          var currency_code = _this4.props.currency;
          return actions.order.patch([{
            op: 'replace',
            path: '/purchase_units/@reference_id==\'default\'/amount',
            value: {
              currency_code: currency_code,
              value: value,
              breakdown: {
                item_total: {
                  currency_code: currency_code,
                  value: baseOrderAmount
                },
                shipping: {
                  currency_code: currency_code,
                  value: shippingAmount
                }
              }
            }
          }]);
        });
      } else {
        return actions.resolve();
      }
    }
  }, {
    key: "onCancel",
    value: function onCancel(data) {
      if (this.props.onPaymentCancel) {
        this.props.onPaymentCancel(data);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state = this.state,
          error = _this$state.error,
          loaded = _this$state.loaded;
      var _this$props = this.props,
          env = _this$props.env,
          sandboxID = _this$props.sandboxID,
          productionID = _this$props.productionID,
          amount = _this$props.amount;

      if (error) {
        return null;
      }

      return loaded && !error && _react["default"].createElement(Button, {
        commit: true,
        env: env,
        amount: amount,
        client: {
          sandbox: sandboxID,
          production: productionID
        },
        payment: this.payment,
        onAuthorize: this.onAuthorize,
        onShippingChange: this.onShippingChange,
        onCancel: this.onCancel
      });
    }
  }]);

  return PayPalButton;
}(_react["default"].Component);

exports.PayPalButton = PayPalButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,